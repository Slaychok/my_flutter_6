import 'package:flutter/material.dart';
import 'package:my_flutter_6/features/models/expense.dart';
import 'package:my_flutter_6/features/widgets/expenses_list_view.dart';
import 'package:my_flutter_6/features/screens/images_screen.dart';
import 'package:my_flutter_6/features/screens/statistics_screen.dart';
import 'package:my_flutter_6/features/screens/categories_screen.dart';
import 'package:go_router/go_router.dart';

class ExpensesListScreen extends StatelessWidget {
  final List<Expense> expenses;
  final VoidCallback onAdd;
  final Function(String id) onDelete;
  final Function(Expense expense)? onTap;

  const ExpensesListScreen({
    Key? key,
    required this.expenses,
    required this.onAdd,
    required this.onDelete,
    this.onTap,
  }) : super(key: key);

  // === –°–¢–†–ê–ù–ò–ß–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø (Navigator) ===

  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é
  void _openImagesScreen(BuildContext context) {
    Navigator.of(context).push(
      MaterialPageRoute(builder: (ctx) => const ImagesScreen()),
    );
  }

  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  void _openStatisticsScreen(BuildContext context) {
    Navigator.of(context).push(
      MaterialPageRoute(builder: (ctx) => StatisticsScreen(expenses: expenses)),
    );
  }

  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è - –∑–∞–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
  void _openCategoriesScreen(BuildContext context) {
    Navigator.of(context).pushReplacement(
      MaterialPageRoute(builder: (ctx) => const CategoriesScreen()),
    );
  }

  // === –ú–ê–†–®–†–£–¢–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø (GoRouter) ===

  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  void _openImagesScreenGoRouter(BuildContext context) {
    context.push('/images');
  }

  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  void _openStatisticsScreenGoRouter(BuildContext context) {
    context.push('/statistics');
  }

  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  void _openCategoriesScreenGoRouter(BuildContext context) {
    context.go('/categories');
  }

  Widget _buildNavigationSection(BuildContext context) {
    return Card(
      margin: const EdgeInsets.all(16),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 16),

            const Text(
              'üì± –°–¢–†–ê–ù–ò–ß–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø (Navigator):',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.blue),
            ),
            const SizedBox(height: 10),
            Wrap(
              spacing: 8,
              runSpacing: 8,
              children: [
                ElevatedButton(
                  onPressed: () => _openImagesScreen(context),
                  child: const Text('–ì–∞–ª–µ—Ä–µ—è (push)'),
                ),
                ElevatedButton(
                  onPressed: () => _openStatisticsScreen(context),
                  child: const Text('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (push)'),
                ),
                ElevatedButton(
                  onPressed: () => _openCategoriesScreen(context),
                  child: const Text('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (pushReplacement)'),
                ),
              ],
            ),

            const SizedBox(height: 20),
            const Text(
              'üõ£Ô∏è –ú–ê–†–®–†–£–¢–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø (GoRouter):',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.green),
            ),
            const SizedBox(height: 10),
            Wrap(
              spacing: 8,
              runSpacing: 8,
              children: [
                ElevatedButton(
                  onPressed: () => _openImagesScreenGoRouter(context),
                  child: const Text('–ì–∞–ª–µ—Ä–µ—è (push)'),
                ),
                ElevatedButton(
                  onPressed: () => _openStatisticsScreenGoRouter(context),
                  child: const Text('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (push)'),
                ),
                ElevatedButton(
                  onPressed: () => _openCategoriesScreenGoRouter(context),
                  child: const Text('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (go)'),
                ),
              ],
            ),

            const SizedBox(height: 16),
            const Text(
              'üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:\n'
                  '‚Ä¢ push - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é)\n'
                  '‚Ä¢ pushReplacement/go - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (–∑–∞–º–µ–Ω—è–µ—Ç —ç–∫—Ä–∞–Ω)',
              style: TextStyle(fontSize: 12, color: Colors.grey),
            ),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–ú–æ–∏ –†–∞—Å—Ö–æ–¥—ã'),
        actions: [
          // –°—Ç—Ä–∞–Ω–∏—á–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
          PopupMenuButton<String>(
            icon: const Icon(Icons.navigation),
            itemBuilder: (context) => [
              const PopupMenuItem(
                value: 'images',
                child: Text('üì± –ì–∞–ª–µ—Ä–µ—è (Navigator)'),
              ),
              const PopupMenuItem(
                value: 'stats',
                child: Text('üì± –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (Navigator)'),
              ),
              const PopupMenuItem(
                value: 'categories',
                child: Text('üì± –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (Navigator)'),
              ),
            ],
            onSelected: (value) {
              switch (value) {
                case 'images':
                  _openImagesScreen(context);
                  break;
                case 'stats':
                  _openStatisticsScreen(context);
                  break;
                case 'categories':
                  _openCategoriesScreen(context);
                  break;
              }
            },
          ),
        ],
      ),
      body: Column(
        children: [
          _buildNavigationSection(context),
          const SizedBox(height: 10),
          Expanded(
            child: ExpensesListView(
              expenses: expenses,
              onDelete: onDelete,
              onTap: onTap,
            ),
          ),
        ],
      ),
      floatingActionButton: Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          FloatingActionButton(
            heroTag: 'images_btn',
            onPressed: () => _openImagesScreen(context),
            child: const Icon(Icons.photo),
            mini: true,
          ),
          const SizedBox(height: 10),
          FloatingActionButton(
            heroTag: 'add_btn',
            onPressed: onAdd,
            child: const Icon(Icons.add),
          ),
        ],
      ),
    );
  }
}